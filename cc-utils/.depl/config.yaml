project_name: cc-utils
version: 4
langs:
  - rust
targets:
  - arch: x86_64
    os: linux
    os_derivative: any
    os_version:
      type: no
  - arch: wasm32
    os: web
    os_derivative: any
    os_version:
      type: no
cache_files:
  - .git
  - Cargo.lock
  - target
artifacts: []
variables: []
place_artifacts_into_project_root: []
pipelines:
  - title: build
    desc: CC Utils Pipeline.
    info: cc-utils-default@0.1.0
    tags:
      - cargo
      - clippy
      - build
    default: true
    actions:
      - title: Lint
        desc: Got from `Cargo Clippy`.
        info: cargo-clippy@0.1.0
        tags:
          - cargo
          - clippy
        requirements:
          - type: exists
            path: /bin/cargo
        action:
          type: pre_build
          supported_langs:
            - rust
          commands:
            - bash_c: RUSTFLAGS='-Zthreads=16 --cfg reqwest_unstable' cargo clippy
              ignore_fails: false
              show_success_output: true
              show_bash_c: true
      - title: Format
        desc: Format `.rs` files
        info: cargo-fmt@0.1.0
        tags:
          - rust
          - cargo
          - fmt
        exec_in_project_dir: true
        action:
          type: pre_build
          supported_langs:
            - rust
          commands:
            - bash_c: cargo fmt -- --config tab_spaces=2,max_width=120 */**/*.rs
              ignore_fails: false
              show_success_output: false
              show_bash_c: true
              only_when_fresh: false
      - title: Build
        desc: Got from `Cargo Build (Release)`. Build the Rust project with Cargo default settings in release mode
        info: cargo-rel@0.1
        tags:
          - rust
          - cargo
        requirements:
          - type: exists
            path: /bin/cargo
        action:
          type: build
          supported_langs:
            - rust
          commands:
            - bash_c: RUSTFLAGS='-Zthreads=16 --cfg reqwest_unstable' cargo build --release
              ignore_fails: false
              show_success_output: false
              show_bash_c: true
  - title: build-wasm
    desc: CC Utils Pipeline.
    info: cc-utils-default@0.1.1
    tags:
      - cargo
      - clippy
      - build
    default: true
    actions:
      - title: Lint
        desc: Got from `Cargo Clippy`.
        info: cargo-clippy@0.1.0
        tags:
          - cargo
          - clippy
        requirements:
          - type: exists
            path: /bin/cargo
        action:
          type: pre_build
          supported_langs:
            - rust
          commands:
            - bash_c: RUSTFLAGS='-Zthreads=16 --cfg reqwest_unstable' cargo clippy --target wasm32-unknown-unknown --no-default-features --features=reqwest
              ignore_fails: false
              show_success_output: true
              show_bash_c: true
      - title: Format
        desc: Format `.rs` files
        info: cargo-fmt@0.1.0
        tags:
          - rust
          - cargo
          - fmt
        exec_in_project_dir: true
        action:
          type: pre_build
          supported_langs:
            - rust
          commands:
            - bash_c: cargo fmt -- --config tab_spaces=2,max_width=120 */**/*.rs
              ignore_fails: false
              show_success_output: false
              show_bash_c: true
              only_when_fresh: false
      - title: Build
        desc: Got from `Cargo Build (Release)`. Build the Rust project with Cargo default settings in release mode
        info: cargo-rel@0.1
        tags:
          - rust
          - cargo
        requirements:
          - type: exists
            path: /bin/cargo
        action:
          type: build
          supported_langs:
            - rust
          commands:
            - bash_c: RUSTFLAGS='-Zthreads=16 --cfg reqwest_unstable' cargo build --release --target wasm32-unknown-unknown --no-default-features --features=reqwest
              ignore_fails: false
              show_success_output: false
              show_bash_c: true
